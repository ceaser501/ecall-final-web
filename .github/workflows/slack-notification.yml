name: Notify Slack on Merge

on:
  pull_request:
    types: [closed]          # PR이 닫힐 때(머지 or 닫힘)
    branches: [ main ]       # main 대상 PR만
  workflow_dispatch:         # 수동 테스트 버튼

jobs:
  merged_to_main:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Build Slack payload
        run: |
          cat > payload.json <<'JSON'
          {
            "text": ":tada: PR #${{ github.event.pull_request.number }} *merged* into `main`",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": ":tada: *Merged* <${{ github.event.pull_request.html_url }}|PR #${{ github.event.pull_request.number }}> into `main`\n*Title:* ${{ github.event.pull_request.title }}\n*Author:* ${{ github.event.pull_request.user.login }}\n*Merged by:* ${{ github.event.pull_request.merged_by.login }}\n*Branch:* `${{ github.event.pull_request.head.ref }} → ${{ github.event.pull_request.base.ref }} `"
                }
              }
            ]
          }
          JSON
      - name: Send to Slack
        run: |
          curl -X POST -H 'Content-type: application/json' \
               --data @payload.json \
               "${{ secrets.SLACK_WEBHOOK_URL }}"

  # 수동 테스트용(메시지 전송만)
  manual_test:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Send test ping
        run: |
          curl -X POST -H 'Content-type: application/json' \
               --data '{"text":":white_check_mark: Slack webhook test from GitHub Actions"}' \
               "${{ secrets.SLACK_WEBHOOK_URL }}"